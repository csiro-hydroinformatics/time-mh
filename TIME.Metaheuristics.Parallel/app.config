<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <!-- configSections must be the first child of configuration -->
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <runtime>
    <loadFromRemoteSources enabled="true" />
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="nunit.framework" publicKeyToken="96D09A1EB7F44A77" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.6.2.12296" newVersion="2.6.2.12296" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>
  <log4net>
    <!--Console Appender. Only required for debugging-->
    <appender name="ConsoleAppender" type="log4net.Appender.ColoredConsoleAppender">
      <mapping>
        <level value="FATAL" />
        <foreColor value="Red, HighIntensity" />
      </mapping>
      <mapping>
        <level value="ERROR" />
        <foreColor value="YELLOW, HighIntensity" />
      </mapping>
      <mapping>
        <level value="WARN" />
        <foreColor value="CYAN, HighIntensity" />
      </mapping>
      <mapping>
        <level value="INFO" />
        <foreColor value="Green, HighIntensity" />
      </mapping>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%-5level - %message%newline" />
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <levelMin value="DEBUG" />
        <levelMax value="FATAL" />
      </filter>
    </appender>
    <!--Plain console appender, as the colourised one does not work on linux-->
    <appender name="PlainConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date %-5level - %message%newline" />
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <levelMin value="DEBUG" />
        <levelMax value="FATAL" />
      </filter>
    </appender>
    <!--File Appender-->
    <appender name="FileAppender" type="log4net.Appender.FileAppender">
      <file value="ApplicationLog-commandArgs.log" />
      <appendToFile value="false" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level - %message%newline %exception" />
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <levelMin value="DEBUG" />
        <levelMax value="FATAL" />
      </filter>
    </appender>
    <!--Buffered decorator to the file appender-->
    <!--
    <appender name="Buffered" type="log4net.Appender.BufferingForwardingAppender">
      -->
    <!--How many messages to buffer-->
    <!--
      <bufferSize value="500" />
      -->
    <!--
        Corresponds to fixing exception text and thread names. See http://logging.apache.org/log4net/release/sdk/log4net.Core.FixFlags.html 
        If this is not specified, then all values are fixed at the time of buffering, with substantial performance penalties.
        This app does not log anything other than exceptions that requires fixing.
      -->
    <!--
      <Fix value="264"/>
      -->
    <!--Messages are retained and the log is flushed when the buffer is full. Setting this to true will cause messages to be lost
      when the buffer is full. Combined with the evaluator threshold, this can create a buffered log that does nothing until the 
      threshold is met, and then the last N messages are logged.-->
    <!--
      <lossy value="false"/>
      -->
    <!--The evaluator threshold forces the logger to flush the buffer immediately when a message >= threshold value is logged-->
    <!--
      <evaluator type="log4net.Core.LevelEvaluator">
        <threshold value="ERROR" />
      </evaluator>
      <appender-ref ref="FileAppender" />
    </appender>-->
    <root>
      <!--Available levels are OFF, FATAL, ERROR, WARN, INFO, DEBUG-->
      <!--This controls the global minimum logging level-->
      <level value="DEBUG" />
      <appender-ref ref="FileAppender" />
      <!--<appender-ref ref="Buffered"/>-->
      <!--<appender-ref ref="ConsoleAppender"/>-->
      <!--<appender-ref ref="PlainConsoleAppender"/>-->
    </root>
  </log4net>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
</configuration>